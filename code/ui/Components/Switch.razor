@using System
@using Sandbox.Razor
@namespace Sandbox.UI
@inherits BaseControl

<root class="@StateClass">
    @if (!string.IsNullOrEmpty(Label))
    {
        <label style="font-size: 18px;">@Label</label>
    }
    <div class="switch-frame">
        <div class="switch-inner">
        </div>
    </div>
</root>

@code
{
    /// <summary>
    /// Text indicating the purpose of the switch.
    /// </summary>
    public string Label { get; set; } = "";

    /// <summary>
    /// The convar to bind to. Handles Value/OnValueChanged
    /// </summary>
    public string Convar { get; set; } = "";

    public Action<bool> OnValueChanged { get; set; }

    private string StateClass => Value ? "active" : "inactive";
    private bool _value;

    public bool Value
    {
        get => _value;

        set
        {
            if (_value == value)
                return;
 
            _value = value;
            StateHasChanged();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Convar != "")
        {
            Value = ConsoleSystem.GetValue(Convar, "0") != "0";
        }
    }

    protected override void OnMouseDown( MousePanelEvent e )
    {
        base.OnMouseDown( e );

        Value = !Value;
        if (Convar != "")
        {
            ConsoleSystem.Run( Convar, Value ? "1" : "0" );
        }
        OnValueChanged?.Invoke( Value );
        e.StopPropagation();
    }
}

<style>
Switch {
    flex-direction: column;
    min-height: 24px;
    margin: 0px 8px;
    gap: 8px;
    padding-bottom: 15px;
    flex-shrink: 0;

    .switch-frame {
        flex-grow: 0;
        flex-shrink: 1;
        width: 48px;
        height: 16px;
        background-color: #fff1;
        margin: 0px 5px;
        align-items: center;
        border-radius: 100px;
        transition: all 0.4s linear;

        .switch-inner {
            flex-grow: 0;
            flex-shrink: 1;
            background-color: #999;
            width: 25px;
            height: 25px;
            border-radius: 100px;
            left: 20%;
            transform: translateX(-50%);
            transition: all 0.3s ease-out;
        }
    }

    &.active {
        .switch-frame {
            background-color: #fffa;
        }

        .switch-inner {
            left: 80%;
            background-color: #fff;
        }
    }
}
</style>
